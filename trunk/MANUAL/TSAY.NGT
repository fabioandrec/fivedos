!short: CLASE ^BTSay^B                                                                  
'------------------------------------------------------------------------------'
    Clase derivada de TLabel para soporte de objetos Say.
'------------------------------------------------------------------------------'
!short:컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
!short:
!short: DATOS
!short:컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
!short:
!short:bGetText^B         Codeblock para obtener la cadena a mostrar.^B
'------------------------------------------------------------------------------'
'------------------------------------------------------------------------------'
!short:cPicture^B         Formato en que se muestra la cadena.^B
'------------------------------------------------------------------------------'
'------------------------------------------------------------------------------'
!short:
!short: METODOS
!short:컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
!short:
!short:New^B              Constructor de la clase.                                    ^B
'------------------------------------------------------------------------------'
^U New
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

^B Prototipo:^B
    New( nTop, nLeft, bGetText, cColor, oWnd,
         nJustify, cPicture, nWidth, nHeight ) -> Self

^B Descripci줻:^B
    Es el constructor de la clase. Recibe los siguientes par쟭etros:

    ^BnTop    ^B    Fila donde se pinta.
    ^BnLeft   ^B    Columna donde se pinta.
    ^BbGetText^B    Codeblock para obtener la cadena a pintar.
    ^BcColor  ^B    Colores a utilizar.
    ^BoWnd    ^B    Referencia a la ventana a la que pertenece.
    ^BnJustify^B    Determina la forma en que se pinta el texto. Se Puede dar
                tres casos:
                ^BIgual a   0 ^B: El texto aparece centrado.
                ^BMayor que 0 ^B: El texto se justifica a la derecha.
                ^BMenor que 0 ^B: El texto se justifica a la izquierda.
    ^BcPicture^B    Formato en que se muestra la cadena.
    ^BnWidth  ^B    Ancho de la etiqueta.
    ^BnHeight ^B    Alto de la etiqueta.

^B Retorno:^B
    Devuelve una referencia al objeto creado.

'------------------------------------------------------------------------------'
!short:ReDefine^B         Constructor desde recursos.                                 ^B
'------------------------------------------------------------------------------'
^U ReDefine
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

^B Prototipo:^B
    ReDefine( cColor, nHelpId, bText, cPicture, nJustify ) -> Self


^B Descripci줻:^B
    Constructor desde recursos. Recibe los siguientes par쟭etros:

    ^BcColor  ^B    Colores a utilizar.
    ^BnHelpId ^B    Identificativo de contexto de ayuda.
    ^BbText   ^B    Codeblock para obtener la cadena a pintar.
    ^BcPicture^B    Formato en que se muestra la cadena.
    ^BnJustify^B    Determina la forma en que se pinta el texto. Se Puede dar
                tres casos:
                ^BIgual a   0 ^B: El texto aparece centrado.
                ^BMayor que 0 ^B: El texto se justifica a la derecha.
                ^BMenor que 0 ^B: El texto se justifica a la izquierda.

^B Retorno:^B
    Devuelve una referencia al objeto creado.

'------------------------------------------------------------------------------'
!short:Refresh^B          Actualiza la im쟥en del objeto en la pantalla.              ^B
'------------------------------------------------------------------------------'
^U Refresh
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

^B Prototipo:^B
    Refresh() -> NIL

^B Descripci줻:^B
    Actualiza la im쟥en del objeto en la pantalla con el la cadena que
    devuelve ^B::bGetText.^B

^B Retorno:^B
    Devuelve NIL.

'------------------------------------------------------------------------------'
!short:SetColors^B        Asigna los colores.                                         ^B
'------------------------------------------------------------------------------'
^U SetColors
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

^B Prototipo:^B
    SetColors( cColor ) -> NIL

^B Descripci줻:^B
    Asigna los colores a partir de la cadena de caracteres ^BcColor.^B En 굎ta
    se codifican los cuatro colores que se utilizan que son:

    1.- Color usado por el texto cuando no tiene focus.
    2.- Color usado por el texto cuando tiene focus.
    3.- Color usado por la letra resaltada cuando no tiene focus.
    4.- Color usado por la letra resaltada cuando tiene focus.

^B Retorno:^B
    Devuelve NIL.

'------------------------------------------------------------------------------'
!short:SetFocus^B         M굏odo llamado para cambiar el focus.                       ^B
'------------------------------------------------------------------------------'
^U SetFocus
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

^B Prototipo:^B
    SetFocus( lOnOff ) -> NIL

^B Descripci줻:^B
    Este m굏odo se usa para cambiar el focus del objeto.

^B Retorno:^B
    Devuelve NIL.

'------------------------------------------------------------------------------'
!short:SetText^B          Ajusta el texto al tama쨚 del say y lo pinta.               ^B
'------------------------------------------------------------------------------'
^U SetText
컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴

^B Prototipo:^B
    SetText() -> NIL

^B Descripci줻:^B
    Ajusta el texto al tama쨚 del say y lo pinta.

^B Retorno:^B
    Devuelve NIL.

'------------------------------------------------------------------------------'
